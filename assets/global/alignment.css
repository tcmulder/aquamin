/**
 * Page layout alignments
 *
 * These reset some default WordPress layout quirks
 * that make alignment inconsistent.
 */

/**
 * Fix extreme default background padding.
 *
 * By default, WordPress adds HUGE padding values to things with backgorund
 * colors, which is weird. This removes the top and bottom, then also removes
 * the left and right (unless it's using the .has-global-padding value). Note
 * further that any manually-added inline padding settings on a block will
 * properly override the following resets.
 */
 .has-background.has-background {
	padding-top: unset;
	padding-bottom: unset;
	&:not(.has-global-padding) {
		padding-left: unset;
		padding-right: unset;
	}
}

/**
 * Fix block cover padding.
 * 
 * By default, WordPress adds padding:1em all around blocks,
 * so we remove that.
 */
.wp-block-cover.wp-block-cover {
	padding: unset;
}

/**
 * Fix .alignfull blocks within cover blocks.
 * 
 * Blocks within the cover block's content container div
 * don't respect .alignfull. Currently there is no way around
 * this, so use an inner group block with padding instead.
 */

/**
 * Force align stretch.
 * 
 * When e.g. columns are set to stretch, they do... but their immediate
 * children do not, which sorta defeats the purpose. This forces immediate
 * children of stretched blocks to mimic the stretch also.
 */
.is-vertically-aligned-stretch > * {
	height: 100%;
}

/**
 * Adjust layout constrained's forced top margins.
 * 
 * The setting theme.json.styles.spacing.blockGap is used for
 * all default gap spacing (like between column blocks), but
 * is also used between all adjacent root-level blocks, meaning
 * we have to manually set each root block's top margin to our
 * desired value, manually. This lets us apply our desired default
 * (even if that's 0px).
 */
.torso.is-layout-constrained,
.is-root-container.is-layout-constrained {
	& > :not([style*="margin-top"]) {
		margin-block-start: 0;
	}
}
